- name: Set up Let's Encrypt for {{ item["domain"] }}
  include_tasks: "certbot.yml"
  vars:
    certbot_domain: "{{ item['domain'] }}"
    certbot_email: "{{ email_address }}"
    certbot_flags: ""

- name: Set up Let's Encrypt for {{ item["name"] }} aliases
  include_tasks: "certbot.yml"
  vars:
    certbot_email: "{{ email_address }}"
    certbot_flags: ""
  loop: "{{ item['aliases'] }}"
  loop_control:
    loop_var: certbot_domain
    
- name: Create webroot
  ansible.builtin.file:
    path: /var/www/filestore_{{ item["name"] }}
    mode: "0755"
    state: directory
  become: true

- name: Create nginx site file
  ansible.builtin.template:
    src: ../files/nginx
    dest: /etc/nginx/sites-available/filestore_{{ item["name"] }}
    owner: root
    group: root
    mode: "0744"
  become: true
  register: nginx_site

- name: Stat nginx site symlink
  ansible.builtin.stat: 
    path: /etc/nginx/sites-enabled/filestore_{{ item["name"] }}
  become: true
  register: nginx_site_stat

- name: Create symlink for nginx site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/filestore_{{ item["name"] }}
    dest: /etc/nginx/sites-enabled/filestore_{{ item["name"] }}
    owner: root
    group: root
    mode: "0744"
    state: link
  become: true
  when: not nginx_site_stat.stat.exists

- name: Verify nginx site file
  ansible.builtin.command: nginx -t
  become: true
  when: nginx_site.changed

- name: Restart nginx
  ansible.builtin.systemd:
    name: nginx.service
    state: restarted
    scope: system
    enabled: true
  become: true
  when: nginx_site.changed
